name: Deploy backend to GHCR and eks

on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
 
jobs:
  # changed_files:
  #   runs-on: ubuntu-latest  # windows-latest || macos-latest
  #   name: Test changed-files
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

  #     # Example 1
  #     - name: Get changed files
  #       id: changed-files
  #       uses: tj-actions/changed-files@v37

  #     # NOTE: `since_last_remote_commit: true` is implied by default and falls back to the previous local commit.

  #     - name: List all changed files
        
  #       run: |
  #         for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
  #           path=$(echo "$file" | cut -d'/' -f2)
  #           echo "$path was changed"
  #         done
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend
    strategy:
        matrix:
            services:
            - address-service
            - user-service
            - appointment-service
            - card-service
            - cloud-gateway
            - lab-service
            - patient-service
            - service-registry
            - test-lab-service
            - test-service

    steps:
      # - name: Checkout code
      #   uses: actions/checkout@v3

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # OR "2" -> To retrieve the preceding commit.

      # Example 1
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37
        
      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #    registry: ghcr.io
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GHCR_PAT }}

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: adding eks-cluster
      #   env: 
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     cluster_name: ${{ secrets.CLUSTER_NAME }}
      #   run: |
      #       aws eks --region $aws_region update-kubeconfig --name $cluster_name
      - name: Run Strategy
        run: |
            for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
              path=$(echo "$file" | cut -d'/' -f2)
              cd $path
              echo "$path was changed"
               if [[ `$path` == `${{ matrix.services }}` ]]; then
                  mvn clean package -DskipTests
                  docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} .
              fi
             
            done




  # cd ${{ matrix.services }}
  #           mvn clean package -DskipTests
  #           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} .
  #           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }}
  #           kubectl set image deployment/${{ matrix.services }}-deployment ${{ matrix.services }}-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }}
 


          



         

  

# name: Deploy backend to GHCR and EKS

# on:
#   push:
#     paths:
#       - 'backend/**'
#       - '.github/workflows/backend.yaml'
 
# jobs:
#   deploy_address_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy address-service
#         run: |
#           cd backend/address-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }}
#           kubectl set image deployment/address-service-deployment address-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }}

#   deploy_user_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy user-service
#         run: |
#           cd backend/user-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }}
#           kubectl set image deployment/user-service-deployment user-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }}

#   deploy_appointment_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy appointment-service
#         run: |
#           cd backend/appointment-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }}
#           kubectl set image deployment/appointment-service-deployment appointment-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }}

#   deploy_card_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy card-service
#         run: |
#           cd backend/card-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }}
#           kubectl set image deployment/card-service-deployment card-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }}

#   deploy_cloud_gateway:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy cloud-gateway
#         run: |
#           cd backend/cloud-gateway
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }}
#           kubectl set image deployment/cloud-gateway-deployment cloud-gateway-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }}

#   deploy_lab_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy lab-service
#         run: |
#           cd backend/lab-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }}
#           kubectl set image deployment/lab-service-deployment lab-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }}

#   deploy_patient_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy patient-service
#         run: |
#           cd backend/patient-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }}
#           kubectl set image deployment/patient-service-deployment patient-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }}

#   deploy_service_registry:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy service-registry
#         run: |
#           cd backend/service-registry
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }}
#           kubectl set image deployment/service-registry-deployment service-registry-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }}

#   deploy_test_lab_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy test-lab-service
#         run: |
#           cd backend/test-lab-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }}
#           kubectl set image deployment/test-lab-service-deployment test-lab-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }}

#   deploy_test_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy test-service
#         run: |
#           cd backend/test-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }}
#           kubectl set image deployment/test-service-deployment test-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }}
