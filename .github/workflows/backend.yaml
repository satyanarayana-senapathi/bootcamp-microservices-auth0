name: BOOTCAMP - BACKEND deployment 
on:
  push:
    paths:
      - 'backend/**'
      - '.github/workflows/backend.yaml'
 
jobs:
  filesChanged:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend

    outputs:
      changed-services: ${{ steps.set-output.outputs.changed-services }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v37

      - name: Determine changed services
        id: set-output
        run: | 
          changed_services=()
          services=("address-service" "user-service" "appointment-service" "card-service" "cloud-gateway" "lab-service" "patient-service" "service-registry" "test-lab-service" "test-service")  
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            path=$(echo "$file" | cut -d'/' -f2)
            for service in "${services[@]}"; do
                if [[ $service == $path ]]; then
                    changed_services+=("$path")
                    break
                fi
            done  
          done
          echo "::set-output name=changed-services::$(IFS=,; echo "${changed_services[*]}")"
          echo "Changed services: ${changed_services[*]}"
      
        
  deploy:
    runs-on: ubuntu-latest
    needs: filesChanged
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto' 
          java-version: '11'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
         registry: ghcr.io
         username: ${{ github.actor }}
         password: ${{ secrets.GHCR_PAT }}

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: adding eks-cluster
      #   env: 
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     cluster_name: ${{ secrets.CLUSTER_NAME }}
      #   run: |
      #       aws eks --region $aws_region update-kubeconfig --name $cluster_name
      - name: Run Strategy
        run: |
            IFS=',' read -ra changed_services <<< "${{ needs.filesChanged.outputs.changed-services }}"
            for path in "${changed_services[@]}"; do
                cd $path
                mvn clean package -DskipTests
                docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-$path:v${{ github.run_number }} .
                docker tag ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-$path:v${{ github.run_number }} ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-$path:latest
                docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-$path:v${{ github.run_number }}
                docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-$path:latest
            done

# name: BOOTCAMP - BACKEND deployment 
# run-name: Backend deployment update triggered by ${{ github.actor }}.
# on:
#   push:
#     paths:
#       - 'backend/**'
#       - '.github/workflows/backend.yaml'
 
# jobs:
#   filesChanged:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10
#     defaults:
#       run:
#         working-directory: backend
#     strategy:
#         matrix:
#             services:
#             - address-service
#             - user-service
#             - appointment-service
#             - card-service
#             - cloud-gateway
#             - lab-service
#             - patient-service
#             - service-registry
#             - test-lab-service
#             - test-service

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0 

#       - name: Get changed files
#         id: changed-files
#         uses: tj-actions/changed-files@v37
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: adding eks-cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#             aws eks --region $aws_region update-kubeconfig --name $cluster_name
#       - name: Run Strategy
#         run: |
#             declare -A uniqueFiles
            
#             for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
#               path=$(echo "$file" | cut -d'/' -f2)
#               uniqueFiles["$path"]=1
#             done

#             echo "Unique changed files:"
#             for file in "${!uniqueFiles[@]}"; do
#                 echo "$file"
#             done

#             for path in "${!uniqueFiles[@]}"; do
#                 if [[ "$path" == "${{ matrix.services }}" ]]; then
#                     cd $path
#                     mvn clean package -DskipTests
#                     docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} .
#                     docker tag ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:latest
#                     docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }}
#                     docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:latest
#                 fi
#             done

# name: BOOTCAMP - BACKEND deployment 
# run-name: Backend deployment update triggered by ${{ github.actor }}.
# on:
#   push:
#     paths:
#       - 'backend/**'
#       - '.github/workflows/backend.yaml'
 
# jobs:
#   filesChanged:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10
#     defaults:
#       run:
#         working-directory: backend

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
#         with:
#           fetch-depth: 0 

#       - name: Get changed files
#         id: changed-files
#         uses: tj-actions/changed-files@v37

#       - name: setup files changed
#         run: | 
#           declare -A uniqueFiles
#           services=("address-service" "user-service" "appointment-service" "card-service" "cloud-gateway" "lab-service" "patient-service" "service-registry" "test-lab-service" "test-service")  
#           for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
#             path=$(echo "$file" | cut -d'/' -f2)
#             for service in "${services[@]}"; do
#                 if [[ $service == $path ]]; then
#                     uniqueFiles["$path"]=1
#                     break
#                 fi
#             done  
#           done

#           echo "Unique changed files:"
#           for file in "${!uniqueFiles[@]}"; do
#               echo "$file"
#           done
        
#   deploy:
#     runs-on: ubuntu-latest
#     needs: filesChanged
#     timeout-minutes: 10
#     defaults:
#       run:
#         working-directory: backend
#     steps:
      # - name: Checkout code
      #   uses: actions/checkout@v3

      # - uses: actions/setup-java@v3
      #   with:
      #     distribution: 'corretto' 
      #     java-version: '11'

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1
      #   with:
      #    registry: ghcr.io
      #    username: ${{ github.actor }}
      #    password: ${{ secrets.GHCR_PAT }}

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_REGION }}

      # - name: adding eks-cluster
      #   env: 
      #     aws_region: ${{ secrets.AWS_REGION }}
      #     cluster_name: ${{ secrets.CLUSTER_NAME }}
      #   run: |
      #       aws eks --region $aws_region update-kubeconfig --name $cluster_name
#       - name: Run Strategy
#         run: |
#             for path in "${!uniqueFiles[@]}"; do
#                     cd $path
#                     mvn clean package -DskipTests
#                     docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} .
#                     docker tag ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:latest
#                     docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }}
#                     docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:latest
#             done




  # cd ${{ matrix.services }}
  #           mvn clean package -DskipTests
  #           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }} .
  #           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }}
  #           kubectl set image deployment/${{ matrix.services }}-deployment ${{ matrix.services }}-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-${{ matrix.services }}:v${{ github.run_number }}
 


          



         

  

# name: Deploy backend to GHCR and EKS

# on:
#   push:
#     paths:
#       - 'backend/**'
#       - '.github/workflows/backend.yaml'
 
# jobs:
#   deploy_address_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy address-service
#         run: |
#           cd backend/address-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }}
#           kubectl set image deployment/address-service-deployment address-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-address-service:v${{ github.run_number }}

#   deploy_user_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy user-service
#         run: |
#           cd backend/user-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }}
#           kubectl set image deployment/user-service-deployment user-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-user-service:v${{ github.run_number }}

#   deploy_appointment_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy appointment-service
#         run: |
#           cd backend/appointment-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }}
#           kubectl set image deployment/appointment-service-deployment appointment-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-appointment-service:v${{ github.run_number }}

#   deploy_card_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy card-service
#         run: |
#           cd backend/card-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }}
#           kubectl set image deployment/card-service-deployment card-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-card-service:v${{ github.run_number }}

#   deploy_cloud_gateway:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy cloud-gateway
#         run: |
#           cd backend/cloud-gateway
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }}
#           kubectl set image deployment/cloud-gateway-deployment cloud-gateway-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-cloud-gateway:v${{ github.run_number }}

#   deploy_lab_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy lab-service
#         run: |
#           cd backend/lab-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }}
#           kubectl set image deployment/lab-service-deployment lab-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-lab-service:v${{ github.run_number }}

#   deploy_patient_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy patient-service
#         run: |
#           cd backend/patient-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }}
#           kubectl set image deployment/patient-service-deployment patient-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-patient-service:v${{ github.run_number }}

#   deploy_service_registry:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy service-registry
#         run: |
#           cd backend/service-registry
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }}
#           kubectl set image deployment/service-registry-deployment service-registry-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-service-registry:v${{ github.run_number }}

#   deploy_test_lab_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy test-lab-service
#         run: |
#           cd backend/test-lab-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }}
#           kubectl set image deployment/test-lab-service-deployment test-lab-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-lab-service:v${{ github.run_number }}

#   deploy_test_service:
#     runs-on: ubuntu-latest
#     timeout-minutes: 10

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - uses: actions/setup-java@v3
#         with:
#           distribution: 'corretto' 
#           java-version: '11'

#       - name: Login to GitHub Container Registry
#         uses: docker/login-action@v1
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GHCR_PAT }}

#       - name: Configure AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Adding EKS cluster
#         env: 
#           aws_region: ${{ secrets.AWS_REGION }}
#           cluster_name: ${{ secrets.CLUSTER_NAME }}
#         run: |
#           aws eks --region $aws_region update-kubeconfig --name $cluster_name

#       - name: Build and Deploy test-service
#         run: |
#           cd backend/test-service
#           mvn clean package -DskipTests
#           docker build -t ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }} .
#           docker push ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }}
#           kubectl set image deployment/test-service-deployment test-service-pod=ghcr.io/${{ github.actor }}/auth0-bootcamp-backend-test-service:v${{ github.run_number }}
